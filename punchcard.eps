%!PS-Adobe EPSF-3.0
%%BoundingBox: 0 0 595 842
<< /PageSize [595 842] >> setpagedevice

% Specify holes here as a list of at most 240 numbers
% Can be generated by the following command:
%   od -An -tu1 -v program.mvm | xargs | fmt -w 100
/holes [
0 245 2 1 1 1 8 0 255 4 1 2 1 1 1 6 22 7 2 15 0 48 4 15 2 15 6 50 0 3 2 15 6 56 0 9 5 15 6 44 0
2 2 1 0 65 2 11 0 67 2 12 0 66 2 13 0 78 3 1 6 79 9 0 15 1 0 6 89 0 1 6 239 0 255 4 1 2 1 0 1 4
15 2 15 0 12 1 0 2 14 0 13 1 0 2 12 0 14 1 0 2 13 0 125 3 1 6 79 0 12 1 0 2 14 0 13 1 0 2 12 0
14 1 0 2 13 0 91 8 0 207 4 15 8 0 93 8 0 58 8 0 32 8 0 11 1 0 8 0 32 8 0 45 8 0 62 8 0 32 8 0
12 1 0 8 0 10 8 0 11 1 0 2 14 0 13 1 0 2 11 0 14 1 0 2 13 0 209 3 1 6 79 0 11 1 0 2 14 0 13 1
0 2 11 0 14 1 0 2 13 0 1 4 1 2 1 0 255 4 15 2 15 1 1 2 244 6 0 100 101 112 116 104 40 60 57 41 61 0
] def

/logo {
    newpath
    0 0 moveto
    5 0 rlineto
    0 5 rlineto
    -5 0 rlineto
    closepath
    gsave
    0.9 0.9 0.9 setrgbcolor
    fill
    grestore
    0.1 setlinewidth
    0 0 0 setrgbcolor
    stroke

    1 1 4 {
        dup newpath 0 moveto 0 -1 rlineto stroke
        dup newpath 5 moveto 0 1 rlineto stroke
        dup newpath 0 exch moveto -1 0 rlineto stroke
        newpath 5 exch moveto 1 0 rlineto stroke
    } for

    /Courier findfont 5 scalefont setfont
    1 1 moveto
    (M) show
} def

gsave
5 5 scale
51.5 49.2 translate
logo
grestore

/back {
    /Courier findfont 9 scalefont setfont

    2 copy
    newpath
    moveto
    200 0 rlineto
    0 -475 rlineto
    -30 -30 rlineto
    -170 0 rlineto
    closepath
    gsave
    0.98 0.95 0.85 setrgbcolor
    fill
    grestore
    0 0 0 setrgbcolor
    stroke

    2 copy
    newpath
    exch 80 add exch 8 sub moveto
    40 0 rlineto
    -20 5 rlineto
    closepath
    fill

    2 copy
    exch 7 add exch 486 sub moveto
    (0:LIT 1:GET 2:SET 3:PUT 4:SUB) show
    2 copy
    exch 7 add exch 498 sub moveto
    (5:CGT 6:JNZ 7:INP 8:OUT 9:END) show

    0.1 setlinewidth

    2 copy
    newpath
    11 sub moveto
    200 0 rlineto
    stroke

    2 copy
    newpath
    exch 27 add exch 11 sub moveto
    0 -464 rlineto
    stroke

    2 copy
    newpath
    exch 113 add exch 11 sub moveto
    0 -464 rlineto
    stroke

    newpath
    475 sub moveto
    200 0 rlineto
    stroke

    1 setlinewidth
} def

/row {
    /Courier findfont 9 scalefont setfont

    dup 100 lt {
        (0) show
    } if
    3 string cvs show

    10 5.3 rmoveto
    7 -1 0 {
        gsave
        -90 rotate
        1 string cvs show
        grestore
        10 0 rmoveto
    } for

    5 0 rmoveto
    7 -1 0 {
        gsave
        -90 rotate
        1 string cvs show
        grestore
        10 0 rmoveto
    } for
} def

64 800 back

16 2 134 {
    dup 70 exch 840 exch 3.8 mul sub moveto
    row
} for

gsave
45 rotate
2 2 scale
194 24 translate
logo
grestore

324 800 back

136 2 254 {
    dup 330 exch 1296 exch 3.8 mul sub moveto
    row
} for

gsave
45 rotate
2 2 scale
286 -68 translate
logo
grestore

/Helvetica findfont 24 scalefont setfont
160 250 moveto
(MiniVM         Punch Cards) show

/Times findfont 16 scalefont setfont
40 225 moveto
(Specifications:) show
55 205 moveto
(- 256 byte memory, 8-bit addressing, no registers) show
55 185 moveto
(- program starts at byte 16 (1-15 reserved for inter-program communication)) show

/Courier findfont 12 scalefont setfont
80 159 moveto
(Code   Instruction   Argument   Meaning) show
80 143 moveto
(  0        LIT         data     [0] <- data) show
80 131 moveto
(  1        GET         addr     [0] <- [[addr]]) show
80 119 moveto
(  2        SET         addr     [addr] <- [0]) show
80 107 moveto
(  3        PUT         addr     [[addr]] <- [0]) show
80 95 moveto
(  4        SUB         addr     [0] <- [addr] - [0]) show
80 83 moveto
(  5        CGT         addr     [0] <- 0 when [0] > [addr]) show
80 71 moveto
(  6        JNZ         addr     Jumps to `addr' if [0] != 0) show
80 59 moveto
(  7        INP          -       [0] <- input character) show
80 47 moveto
(  8        OUT          -       print [0]) show
80 35 moveto
(  9        END          -       Terminates the program) show

0.1 setlinewidth

newpath
74 28 moveto
438 0 rlineto
0 142 rlineto
-438 0 rlineto
closepath
stroke

newpath 74 154 moveto 438 0 rlineto stroke
newpath 120 28 moveto 0 142 rlineto stroke
newpath 220 28 moveto 0 142 rlineto stroke
newpath 300 28 moveto 0 142 rlineto stroke

% n val
/punch {
    /val exch def
    dup 136 lt {
        dup 2 mod 1 eq { 181 } { 96 } ifelse
        exch 2 idiv 2 mul
        840.5 exch 3.8 mul sub
    } {
        dup 2 mod 1 eq { 441 } { 356 } ifelse
        exch 2 idiv 2 mul
        1296.5 exch 3.8 mul sub 
    } ifelse

    0 1 7 {
        /bit exch def
        val 1 7 bit sub bitshift and 0 ne {
            2 copy
            exch bit 10 mul add exch

            newpath
            moveto
            6 0 rlineto
            0 4 rlineto
            -6 0 rlineto
            closepath
            fill
        } if
    } for
    pop pop
} def

0 1 holes length 1 sub {
    dup holes exch get exch 16 add exch punch
} for

showpage
